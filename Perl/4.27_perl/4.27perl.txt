$n=15; 
if ($n>10) {
print "grenter 10\n";
}
elsif ($n<10){
print "less 10\n";
}
else{
print "eq 10\n";
}

$n=10; 
unless ($n==10) {
print "grenter 10\n";
}
else{
print "ne 10\n";
}

$n1=10;
$n2=10;
$n3=$n1++;
$n4=++$n2;
print $n1--,"\n";
print --$n2,"\n";
print "$n3\t$n4\n";

$n1="a";
$n2="z";
$n1++;
++$n2;
print "$n1\t$n2\n";

$n="aa";
if ($n eq "aa"){
print "eq $n\n";
}
<  >  ==  !=
lt gt eq  ne

#!/usr/bin/perl;
$count=1;
while ($count<10){
print "$count :: aaa\n";
$count++;
}

@a=qw(aa bb cc dd ee);
$count=0;
while ($count<10){
print "$count :: $a[$count]\n";
$count++;
}

@a=(1..10);
map {$_=$_*2} @a;
print "@a\n";

#!/usr/bin/perl;
@a=qw(aa bb cc dd ee);
map {$_=uc($_)} @a;
print "@a\n";

@a=(1..10);
@b=grep {$_>5} @a; 类似if
print "@a\n";
print "@b\n";

@a=qw(asss bsss csss qwff hhr);
@b=grep {$_ eq "asss"} @a;
print "@a\n";
print "@b\n";

#!/usr/bin/perl;
@a=qw(asss bsss csss qwff hhr);
@b=grep {$_ =~ /sss/} @a;
print "@a\n";
print "@b\n";

%ha1=();
$ha1{"name"}="join";
$ha1{"age"}="11";
$ha1{"city"}="wuhan";
print "$ha1{'city'}\n"; #print $ha1{"city"}."\n";

%ha1=();
$ha1{"name"}="join";
$ha1{"age"}="11";
$ha1{"city"}="wuhan";
foreach $es (sort keys %ha1){
print "$es => $ha1{$es}\n";
}


%ha2=();
$ha2{"name"}="join";
$ha2{"age"}="11";
$ha2{"city"}="wuhan";
%ha1=reverse(%ha2);
while (($key,$va)=each %ha2){
print "11:$key\n";
}while (($key,$va)=each %ha2){
print "11:$key\n";
}
foreach $es (sort keys %ha1){
print "22：$es => $ha1{$es}\n";
}
if (exists $ha2{'citys'}){
print "exists";
}

#!/usr/bin/perl;
%ha2=();
$ha2{"name"}="join";
$ha2{"age"}="11";
$ha2{"city"}="wuhan";
%ha1=reverse(%ha2);
%ha3=(%ha1,%ha2);
while (($key,$va)=each %ha3){
print "11:$key\n";
}

#!/usr/bin/perl;
$dna1='ATTTTTCCGGGGGGGG';
#CCCCCCCCGGGAAAAAT
$redna=reverse $dna1;
print "$dna1\n$redna\n";
$redna=~ tr/ATCG/TAGC/;
print "$redna\n";

$a="aa bb cc dd";
@xx=split(/0/,$a);
print "$a\n@xx\n$xx[1]\n";

@a=qw(aa bb cc dd);
$xx=join("::",@a);
print "$xx\n";

#!/usr/bin/perl;
$a="aa bb cc dd";
@xx=split(/ /,$a);
map{$_=ucfirst($_)}@xx; ### 首字母全部大写
print "@xx\n";

#!/usr/bin/perl;
$DNA="ACGGGTTTAAACCGG";
$n=length $DNA;
print "$n\n";
























